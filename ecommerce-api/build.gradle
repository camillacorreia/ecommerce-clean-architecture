plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
}

allprojects {
    group 'br.com.ecommerce'
    version version

    repositories {
        mavenCentral()
    }
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

subprojects {
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                limit {
                    minimum = new BigDecimal(minTestCoverage)
                }
            }
        }
    }

    tasks.withType(Test).configureEach {
        testLogging {
            showExceptions true
            showCauses true
            showStackTraces true
            showStandardStreams true
            events = ["passed", "skipped", "failed", "standardOut", "standardError"]
        }
        useJUnitPlatform()
    }
    check.dependsOn jacocoTestCoverageVerification

    checkstyle {
        config = rootProject.resources.text.fromFile("config/checkstyle/checkstyle.xml")
        toolVersion '8.11'
    }

    checkstyleMain {
        source = 'src/main/java'
    }

    checkstyleTest {
        source = 'src/test/java'
    }
}

tasks.register("codeCoverageReport", JacocoReport) {
    subprojects { subproject ->
        subproject.plugins.withType(JacocoPlugin).configureEach {
            subproject.tasks.matching({ t -> t.extensions.findByType(JacocoTaskExtension) }).configureEach { testTask ->
                sourceSets subproject.sourceSets.main
                executionData(testTask)
            }

            subproject.tasks.matching({ t -> t.extensions.findByType(JacocoTaskExtension) }).forEach {
                rootProject.tasks.codeCoverageReport.dependsOn(it)
            }
        }
    }

    reports {
        xml.enabled true
        html.enabled true
    }
}
